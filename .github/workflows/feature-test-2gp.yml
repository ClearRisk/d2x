name: 2GP Feature Test

on:
  workflow_call:
    inputs:
      debug:
        required: false
        default: false
        type: boolean

    secrets:
      # Either dev-hub-auth-url or dev-hub-username, dev-hub-client-id, and dev-hub-private-key are required
      dev-hub-auth-url:
        required: false
      dev-hub-username:
        required: false
      dev-hub-client-id:
        required: false
      dev-hub-private-key:
        required: false
      gh-email:
        required: true
      github-token:
        required: true
      pkg-ver-auth:
        required: true
      pkg-ver-url:
        required: true

jobs:
  feature-test:
    name: "2GP Feature Test"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/clearrisk/d2x:latest
      options: --user root
      credentials:
        username: "${{ github.actor }}"
        password: "${{ secrets.github-token }}"
      env:
        DEV_HUB_AUTH_URL: "${{ secrets.dev-hub-auth-url }}"
        DEV_HUB_USERNAME: "${{ secrets.dev-hub-username }}"
        DEV_HUB_CLIENT_ID: "${{ secrets.dev-hub-client-id }}"
        DEV_HUB_PRIVATE_KEY: "${{ secrets.dev-hub-private-key }}"
        CUMULUSCI_SERVICE_github: '{ "username": "${{ github.actor }}", "token": "${{ secrets.github-token }}", "email": "${{ secrets.gh-email }}" }'
    steps:
      - name: Add install to key
        run: echo "CR_PKG_KEY=c5453a48ab3d0739d82b9038bbaae045" >> $GITHUB_ENV

      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq

      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to DevHub
        run: /usr/local/bin/devhub.sh

      - name: Set Default Org Type
        run: cci org scratch feature feature

      - name: Set default org
        run: cci org default feature

      - name: Put API url in env
        run: echo "PKG_API_URL=${{ secrets.pkg-ver-url }}" >> $GITHUB_ENV

      - name: Put API auth in env
        run: echo "PKG_API_AUTH=${{ secrets.pkg-ver-auth }}" >> $GITHUB_ENV

      - name: Generate deps.txt
        run: echo n | cci task run update_dependencies --interactive True --org feature | tee deps.txt

      - name: Get Auth keys
        run: curl -G "${{ env.PKG_API_URL }}keys?auth-token=${{ env.PKG_API_AUTH }}" --data-urlencode "input=$(cat deps.txt)" | tee out.txt

      - name: Set fake env vars
        run: sed -i.bak 's/=\(.*\)/=c5453a48ab3d0739d82b9038bbaae045/g' out.txt && cat out.txt >> $GITHUB_ENV

      - name: Build Feature Test Package
        env:
          GITHUB_TOKEN: "${{ secrets.github-token }}"
        run: cci flow run build_feature_test_package -o create_package_version__install_key ${{ env.CR_PKG_KEY }} $([[ "${{ inputs.debug }}" == "true" ]] && echo " --debug") | tee cumulusci-flow.log
        shell: bash
      - name: Set Commit Status
        env:
          GITHUB_TOKEN: "${{ secrets.github-token }}"
        run: |
          VERSION=$(cat cumulusci-flow.log | grep -o -E -m 1 "04t[a-zA-Z0-9]{15}")
          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            '/repos/${{ github.repository }}/statuses/${{ github.sha }}' \
            -f state='success' \
            -f description="version_id: $VERSION" \
            -f context='Build Feature Test Package'
        shell: bash
      - name: Run Feature Test
        env:
          GITHUB_TOKEN: "${{ secrets.github-token }}"
        run: cci flow run ci_feature_2gp -o install_managed__password ${{ env.CR_PKG_KEY }}
      - name: Run Feature Test
        run: |
          if [ -d "tests" ]; then
           cci task run robot --org feature
          else
           echo "Robot tests folder not found. Skipping tests."
          fi

      - name: Delete Scratch Org
        if: ${{ always() }}
        run: |
          cci org scratch_delete feature
        shell: bash
