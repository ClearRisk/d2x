name: Beta Test 2GP

on:
  workflow_call:
    secrets:
      dev-hub-auth-url:
        required: true
      gh-email:
        required: true
      github-token:
        required: true
      pkg-ver-auth:
        required: true
      pkg-ver-url:
        required: true

jobs:
  beta-test:
    name: "Beta Test 2GP"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/muselab-d2x/d2x:cumulusci-next
      options: --user root
      credentials:
        username: "${{ github.actor }}"
        password: "${{ secrets.github-token }}"
      env:
        DEV_HUB_AUTH_URL: "${{ secrets.dev-hub-auth-url }}"
        CUMULUSCI_SERVICE_github: '{ "username": "${{ github.actor }}", "token": "${{ secrets.github-token }}", "email": "${{ secrets.gh-email }}" }'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pwgen and jq
        run: |
          apt-get update
          apt-get install -y pwgen jq

      - name: Put API url in env
        run: echo "PKG_API_URL=${{ secrets.pkg-ver-url }}" >> $GITHUB_ENV

      - name: Put API auth in env
        run: echo "PKG_API_AUTH=${{ secrets.pkg-ver-auth }}" >> $GITHUB_ENV

      - name: Generate install Key
        run: echo "NEW_INSTALL_KEY=$(pwgen 15 1)" >> $GITHUB_ENV

      # - name: Get Dependency Install Keys
      #   run: echo "MAP_MANAGED_KEY=$(curl "${{ env.PKG_API_URL }}latest/map_managed?auth-token=${{ env.PKG_API_AUTH }}"| jq -r '.installationKey')" >> $GITHUB_ENV

      - name: Auth to DevHub
        run: /usr/local/bin/devhub.sh

      - name: Set Default Org Type
        run: cci org scratch beta beta

      - name: Set default org
        run: cci org default beta

      - name: Generate deps.txt
        run: echo n | cci task run update_dependencies -o resolution_strategy preproduction -o include_beta True --interactive True --org beta | tee deps.txt

      - name: Get Auth keys
        run: curl -G "${{ env.PKG_API_URL }}keys?auth-token=${{ env.PKG_API_AUTH }}" --data-urlencode "input=$(cat deps.txt)" | tee $GITHUB_ENV

      - name: Install Dependencies for Resolution
        run: cci flow run dependencies
      #-o update_dependencies__resolution_strategy preproduction

      - name: Build Beta Package
        run: cci flow run release_2gp_beta -o create_package_version__install_key ${{ env.NEW_INSTALL_KEY }} | tee create-package-output.txt
        shell: bash

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Log Package to API
        run: python /usr/local/bin/log_package.py

      - name: Run Beta Test
        run: cci flow run custom_install_beta -o install_managed_beta__password ${{ env.NEW_INSTALL_KEY }}
        #-o update_dependencies__resolution_strategy preproduction

      - name: Delete Scratch Org
        if: ${{ always() }}
        run: |
          cci org scratch_delete beta
        shell: bash
